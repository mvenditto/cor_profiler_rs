#![allow(non_camel_case_types)]
#![allow(dead_code)]

use num_derive::FromPrimitive;
use num_derive::ToPrimitive;    
use num_traits::ToPrimitive;    
use std::fmt;
use crate::types::UINT;

#[repr(u32)]
#[derive(FromPrimitive)]
#[derive(ToPrimitive)]
pub enum OpCodes {
    CEE_NOP = 0,
    CEE_BREAK = 1,
    CEE_LDARG_0 = 2,
    CEE_LDARG_1 = 3,
    CEE_LDARG_2 = 4,
    CEE_LDARG_3 = 5,
    CEE_LDLOC_0 = 6,
    CEE_LDLOC_1 = 7,
    CEE_LDLOC_2 = 8,
    CEE_LDLOC_3 = 9,
    CEE_STLOC_0 = 10,
    CEE_STLOC_1 = 11,
    CEE_STLOC_2 = 12,
    CEE_STLOC_3 = 13,
    CEE_LDARG_S = 14,
    CEE_LDARGA_S = 15,
    CEE_STARG_S = 16,
    CEE_LDLOC_S = 17,
    CEE_LDLOCA_S = 18,
    CEE_STLOC_S = 19,
    CEE_LDNULL = 20,
    CEE_LDC_I4_M1 = 21,
    CEE_LDC_I4_0 = 22,
    CEE_LDC_I4_1 = 23,
    CEE_LDC_I4_2 = 24,
    CEE_LDC_I4_3 = 25,
    CEE_LDC_I4_4 = 26,
    CEE_LDC_I4_5 = 27,
    CEE_LDC_I4_6 = 28,
    CEE_LDC_I4_7 = 29,
    CEE_LDC_I4_8 = 30,
    CEE_LDC_I4_S = 31,
    CEE_LDC_I4 = 32,
    CEE_LDC_I8 = 33,
    CEE_LDC_R4 = 34,
    CEE_LDC_R8 = 35,
    CEE_UNUSED49 = 36,
    CEE_DUP = 37,
    CEE_POP = 38,
    CEE_JMP = 39,
    CEE_CALL = 40,
    CEE_CALLI = 41,
    CEE_RET = 42,
    CEE_BR_S = 43,
    CEE_BRFALSE_S = 44,
    CEE_BRTRUE_S = 45,
    CEE_BEQ_S = 46,
    CEE_BGE_S = 47,
    CEE_BGT_S = 48,
    CEE_BLE_S = 49,
    CEE_BLT_S = 50,
    CEE_BNE_UN_S = 51,
    CEE_BGE_UN_S = 52,
    CEE_BGT_UN_S = 53,
    CEE_BLE_UN_S = 54,
    CEE_BLT_UN_S = 55,
    CEE_BR = 56,
    CEE_BRFALSE = 57,
    CEE_BRTRUE = 58,
    CEE_BEQ = 59,
    CEE_BGE = 60,
    CEE_BGT = 61,
    CEE_BLE = 62,
    CEE_BLT = 63,
    CEE_BNE_UN = 64,
    CEE_BGE_UN = 65,
    CEE_BGT_UN = 66,
    CEE_BLE_UN = 67,
    CEE_BLT_UN = 68,
    CEE_SWITCH = 69,
    CEE_LDIND_I1 = 70,
    CEE_LDIND_U1 = 71,
    CEE_LDIND_I2 = 72,
    CEE_LDIND_U2 = 73,
    CEE_LDIND_I4 = 74,
    CEE_LDIND_U4 = 75,
    CEE_LDIND_I8 = 76,
    CEE_LDIND_I = 77,
    CEE_LDIND_R4 = 78,
    CEE_LDIND_R8 = 79,
    CEE_LDIND_REF = 80,
    CEE_STIND_REF = 81,
    CEE_STIND_I1 = 82,
    CEE_STIND_I2 = 83,
    CEE_STIND_I4 = 84,
    CEE_STIND_I8 = 85,
    CEE_STIND_R4 = 86,
    CEE_STIND_R8 = 87,
    CEE_ADD = 88,
    CEE_SUB = 89,
    CEE_MUL = 90,
    CEE_DIV = 91,
    CEE_DIV_UN = 92,
    CEE_REM = 93,
    CEE_REM_UN = 94,
    CEE_AND = 95,
    CEE_OR = 96,
    CEE_XOR = 97,
    CEE_SHL = 98,
    CEE_SHR = 99,
    CEE_SHR_UN = 100,
    CEE_NEG = 101,
    CEE_NOT = 102,
    CEE_CONV_I1 = 103,
    CEE_CONV_I2 = 104,
    CEE_CONV_I4 = 105,
    CEE_CONV_I8 = 106,
    CEE_CONV_R4 = 107,
    CEE_CONV_R8 = 108,
    CEE_CONV_U4 = 109,
    CEE_CONV_U8 = 110,
    CEE_CALLVIRT = 111,
    CEE_CPOBJ = 112,
    CEE_LDOBJ = 113,
    CEE_LDSTR = 114,
    CEE_NEWOBJ = 115,
    CEE_CASTCLASS = 116,
    CEE_ISINST = 117,
    CEE_CONV_R_UN = 118,
    CEE_UNUSED58 = 119,
    CEE_UNUSED1 = 120,
    CEE_UNBOX = 121,
    CEE_THROW = 122,
    CEE_LDFLD = 123,
    CEE_LDFLDA = 124,
    CEE_STFLD = 125,
    CEE_LDSFLD = 126,
    CEE_LDSFLDA = 127,
    CEE_STSFLD = 128,
    CEE_STOBJ = 129,
    CEE_CONV_OVF_I1_UN = 130,
    CEE_CONV_OVF_I2_UN = 131,
    CEE_CONV_OVF_I4_UN = 132,
    CEE_CONV_OVF_I8_UN = 133,
    CEE_CONV_OVF_U1_UN = 134,
    CEE_CONV_OVF_U2_UN = 135,
    CEE_CONV_OVF_U4_UN = 136,
    CEE_CONV_OVF_U8_UN = 137,
    CEE_CONV_OVF_I_UN = 138,
    CEE_CONV_OVF_U_UN = 139,
    CEE_BOX = 140,
    CEE_NEWARR = 141,
    CEE_LDLEN = 142,
    CEE_LDELEMA = 143,
    CEE_LDELEM_I1 = 144,
    CEE_LDELEM_U1 = 145,
    CEE_LDELEM_I2 = 146,
    CEE_LDELEM_U2 = 147,
    CEE_LDELEM_I4 = 148,
    CEE_LDELEM_U4 = 149,
    CEE_LDELEM_I8 = 150,
    CEE_LDELEM_I = 151,
    CEE_LDELEM_R4 = 152,
    CEE_LDELEM_R8 = 153,
    CEE_LDELEM_REF = 154,
    CEE_STELEM_I = 155,
    CEE_STELEM_I1 = 156,
    CEE_STELEM_I2 = 157,
    CEE_STELEM_I4 = 158,
    CEE_STELEM_I8 = 159,
    CEE_STELEM_R4 = 160,
    CEE_STELEM_R8 = 161,
    CEE_STELEM_REF = 162,
    CEE_LDELEM = 163,
    CEE_STELEM = 164,
    CEE_UNBOX_ANY = 165,
    CEE_UNUSED5 = 166,
    CEE_UNUSED6 = 167,
    CEE_UNUSED7 = 168,
    CEE_UNUSED8 = 169,
    CEE_UNUSED9 = 170,
    CEE_UNUSED10 = 171,
    CEE_UNUSED11 = 172,
    CEE_UNUSED12 = 173,
    CEE_UNUSED13 = 174,
    CEE_UNUSED14 = 175,
    CEE_UNUSED15 = 176,
    CEE_UNUSED16 = 177,
    CEE_UNUSED17 = 178,
    CEE_CONV_OVF_I1 = 179,
    CEE_CONV_OVF_U1 = 180,
    CEE_CONV_OVF_I2 = 181,
    CEE_CONV_OVF_U2 = 182,
    CEE_CONV_OVF_I4 = 183,
    CEE_CONV_OVF_U4 = 184,
    CEE_CONV_OVF_I8 = 185,
    CEE_CONV_OVF_U8 = 186,
    CEE_UNUSED50 = 187,
    CEE_UNUSED18 = 188,
    CEE_UNUSED19 = 189,
    CEE_UNUSED20 = 190,
    CEE_UNUSED21 = 191,
    CEE_UNUSED22 = 192,
    CEE_UNUSED23 = 193,
    CEE_REFANYVAL = 194,
    CEE_CKFINITE = 195,
    CEE_UNUSED24 = 196,
    CEE_UNUSED25 = 197,
    CEE_MKREFANY = 198,
    CEE_UNUSED59 = 199,
    CEE_UNUSED60 = 200,
    CEE_UNUSED61 = 201,
    CEE_UNUSED62 = 202,
    CEE_UNUSED63 = 203,
    CEE_UNUSED64 = 204,
    CEE_UNUSED65 = 205,
    CEE_UNUSED66 = 206,
    CEE_UNUSED67 = 207,
    CEE_LDTOKEN = 208,
    CEE_CONV_U2 = 209,
    CEE_CONV_U1 = 210,
    CEE_CONV_I = 211,
    CEE_CONV_OVF_I = 212,
    CEE_CONV_OVF_U = 213,
    CEE_ADD_OVF = 214,
    CEE_ADD_OVF_UN = 215,
    CEE_MUL_OVF = 216,
    CEE_MUL_OVF_UN = 217,
    CEE_SUB_OVF = 218,
    CEE_SUB_OVF_UN = 219,
    CEE_ENDFINALLY = 220,
    CEE_LEAVE = 221,
    CEE_LEAVE_S = 222,
    CEE_STIND_I = 223,
    CEE_CONV_U = 224,
    CEE_UNUSED26 = 225,
    CEE_UNUSED27 = 226,
    CEE_UNUSED28 = 227,
    CEE_UNUSED29 = 228,
    CEE_UNUSED30 = 229,
    CEE_UNUSED31 = 230,
    CEE_UNUSED32 = 231,
    CEE_UNUSED33 = 232,
    CEE_UNUSED34 = 233,
    CEE_UNUSED35 = 234,
    CEE_UNUSED36 = 235,
    CEE_UNUSED37 = 236,
    CEE_UNUSED38 = 237,
    CEE_UNUSED39 = 238,
    CEE_UNUSED40 = 239,
    CEE_UNUSED41 = 240,
    CEE_UNUSED42 = 241,
    CEE_UNUSED43 = 242,
    CEE_UNUSED44 = 243,
    CEE_UNUSED45 = 244,
    CEE_UNUSED46 = 245,
    CEE_UNUSED47 = 246,
    CEE_UNUSED48 = 247,
    CEE_PREFIX7 = 248,
    CEE_PREFIX6 = 249,
    CEE_PREFIX5 = 250,
    CEE_PREFIX4 = 251,
    CEE_PREFIX3 = 252,
    CEE_PREFIX2 = 253,
    CEE_PREFIX1 = 254,
    CEE_PREFIXREF = 255,
    CEE_ARGLIST = 256,
    CEE_CEQ = 257,
    CEE_CGT = 258,
    CEE_CGT_UN = 259,
    CEE_CLT = 260,
    CEE_CLT_UN = 261,
    CEE_LDFTN = 262,
    CEE_LDVIRTFTN = 263,
    CEE_UNUSED56 = 264,
    CEE_LDARG = 265,
    CEE_LDARGA = 266,
    CEE_STARG = 267,
    CEE_LDLOC = 268,
    CEE_LDLOCA = 269,
    CEE_STLOC = 270,
    CEE_LOCALLOC = 271,
    CEE_UNUSED57 = 272,
    CEE_ENDFILTER = 273,
    CEE_UNALIGNED = 274,
    CEE_VOLATILE = 275,
    CEE_TAILCALL = 276,
    CEE_INITOBJ = 277,
    CEE_CONSTRAINED = 278,
    CEE_CPBLK = 279,
    CEE_INITBLK = 280,
    CEE_UNUSED69 = 281,
    CEE_RETHROW = 282,
    CEE_UNUSED51 = 283,
    CEE_SIZEOF = 284,
    CEE_REFANYTYPE = 285,
    CEE_READONLY = 286,
    CEE_UNUSED53 = 287,
    CEE_UNUSED54 = 288,
    CEE_UNUSED55 = 289,
    CEE_UNUSED70 = 290,
    CEE_ILLEGAL = 291,
    CEE_MACRO_END = 292,
    CEE_CODE_LABEL = 293,
    CEE_COUNT = 294,
    CEE_SWITCH_ARG = 295
}

impl fmt::LowerHex for OpCodes {
    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
        let val = ToPrimitive::to_u32(self).unwrap();
        fmt::LowerHex::fmt(&val, f) // delegate to u32 implementation
    }
}